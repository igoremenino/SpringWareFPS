-- Feito por SpringierTrain/SpringWare
-- Se encontrar Erros envie mensagem no meu discord: Themagicloki

if not _G.Ignore then
    _G.Ignore = {} 
end

if not _G.WaitPerAmount then
    _G.WaitPerAmount = 500 
end

_G.SendNotifications = _G.SendNotifications ~= nil and _G.SendNotifications or true 
_G.ConsoleLogs = _G.ConsoleLogs ~= nil and _G.ConsoleLogs or false

if not game:IsLoaded() then
    repeat
        task.wait()
    until game:IsLoaded()
end

-- Configurações padrão
if not _G.Settings then
    _G.Settings = {
        Players = {
            ["Ignore Me"] = true,
            ["Ignore Others"] = true,
            ["Ignore Tools"] = true
        },
        Meshes = {
            NoMesh = false,
            NoTexture = false,
            Destroy = false
        },
        Images = {
            Invisible = true,
            Destroy = false
        },
        Explosions = {
            Smaller = true,
            Invisible = false,
            Destroy = false
        },
        Particles = {
            Invisible = true,
            Destroy = false
        },
        TextLabels = {
            LowerQuality = false,
            Invisible = false,
            Destroy = false
        },
        MeshParts = {
            LowerQuality = true,
            Invisible = false,
            NoTexture = false,
            NoMesh = false,
            Destroy = false
        },
        Other = {
            ["FPS Cap"] = 240,
            ["No Camera Effects"] = true,
            ["No Clothes"] = true,
            ["Low Water Graphics"] = true,
            ["No Shadows"] = true,
            ["Low Rendering"] = true,
            ["Low Quality Parts"] = true,
            ["Low Quality Models"] = true,
            ["Reset Materials"] = true,
            ["Lower Quality MeshParts"] = true
        }
    }
end

local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local StarterGui = game:GetService("StarterGui")
local MaterialService = game:GetService("MaterialService")
local ME = Players.LocalPlayer
local CanBeEnabled = {"ParticleEmitter", "Trail", "Smoke", "Fire", "Sparkles"}

local function PartOfCharacter(instance)
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= ME and player.Character and instance:IsDescendantOf(player.Character) then
            return true
        end
    end
    return false
end

local function DescendantOfIgnore(instance)
    for _, ignoredInstance in pairs(_G.Ignore) do
        if instance:IsDescendantOf(ignoredInstance) then
            return true
        end
    end
    return false
end

local function CheckIfBad(instance)
    if not instance:IsDescendantOf(Players) and
        (_G.Settings.Players["Ignore Others"] and not PartOfCharacter(instance) or not _G.Settings.Players["Ignore Others"]) and
        (_G.Settings.Players["Ignore Me"] and ME.Character and not instance:IsDescendantOf(ME.Character) or not _G.Settings.Players["Ignore Me"]) and
        (_G.Settings.Players["Ignore Tools"] and not instance:IsA("BackpackItem") and not instance:FindFirstAncestorWhichIsA("BackpackItem") or not _G.Settings.Players["Ignore Tools"]) and
        (_G.Ignore and not table.find(_G.Ignore, instance) and not DescendantOfIgnore(instance) or (not _G.Ignore or type(_G.Ignore) ~= "table" or #_G.Ignore <= 0)) then
        
        if instance:IsA("DataModelMesh") then
            if _G.Settings.Meshes.NoMesh and instance:IsA("SpecialMesh") then
                instance.MeshId = ""
            end
            if _G.Settings.Meshes.NoTexture and instance:IsA("SpecialMesh") then
                instance.TextureId = ""
            end
            if _G.Settings.Meshes.Destroy then
                instance:Destroy()
            end

        elseif instance:IsA("FaceInstance") then
            if _G.Settings.Images.Invisible then
                instance.Transparency = 1
                instance.Shiny = 1
            end
            if _G.Settings.Images.Destroy then
                instance:Destroy()
            end

        elseif instance:IsA("ShirtGraphic") then
            if _G.Settings.Images.Invisible then
                instance.Graphic = ""
            end
            if _G.Settings.Images.Destroy then
                instance:Destroy()
            end

        elseif table.find(CanBeEnabled, instance.ClassName) then
            if _G.Settings.Particles.Invisible then
                instance.Enabled = false
            end
            if _G.Settings.Particles.Destroy then
                instance:Destroy()
            end

        elseif instance:IsA("PostEffect") and _G.Settings["No Camera Effects"] then
            instance.Enabled = false

        elseif instance:IsA("Explosion") then
            if _G.Settings.Explosions.Smaller then
                instance.BlastPressure = 1
                instance.BlastRadius = 1
            end
            if _G.Settings.Explosions.Invisible then
                instance.BlastPressure = 1
                instance.BlastRadius = 1
                instance.Visible = false
            end
            if _G.Settings.Explosions.Destroy then
                instance:Destroy()
            end

        elseif (instance:IsA("Clothing") or instance:IsA("SurfaceAppearance") or instance:IsA("BaseWrap")) and _G.Settings["No Clothes"] then
            instance:Destroy()

        elseif instance:IsA("BasePart") and not instance:IsA("MeshPart") and _G.Settings["Low Quality Parts"] then
            instance.Material = Enum.Material.Plastic
            instance.Reflectance = 0

        elseif instance:IsA("TextLabel") and instance:IsDescendantOf(workspace) then
            if _G.Settings.TextLabels.LowerQuality then
                instance.Font = Enum.Font.SourceSans
                instance.TextScaled = false
                instance.RichText = false
                instance.TextSize = 14
            end
            if _G.Settings.TextLabels.Invisible then
                instance.Visible = false
            end
            if _G.Settings.TextLabels.Destroy then
                instance:Destroy()
            end

        elseif instance:IsA("Model") and _G.Settings["Low Quality Models"] then
            instance.LevelOfDetail = 1

        elseif instance:IsA("MeshPart") then
            if _G.Settings.MeshParts.LowerQuality then
                instance.RenderFidelity = 2
                instance.Reflectance = 0
                instance.Material = Enum.Material.Plastic
            end
            if _G.Settings.MeshParts.Invisible then
                instance.Transparency = 1
                instance.RenderFidelity = 2
                instance.Reflectance = 0
                instance.Material = Enum.Material.Plastic
            end
            if _G.Settings.MeshParts.NoTexture then
                instance.TextureID = ""
            end
            if _G.Settings.MeshParts.NoMesh then
                instance.MeshId = ""
            end
            if _G.Settings.MeshParts.Destroy then
                instance:Destroy()
            end
        end
    end
end

if _G.SendNotifications then
    StarterGui:SetCore("SendNotification", {
        Title = "discord.gg/rips",
        Text = "Loading FPS Booster...",
        Duration = math.huge,
        Button1 = "Okay"
    })
end

-- Gráficos de Água Baixos
coroutine.wrap(pcall)(function()
    if _G.Settings["Low Water Graphics"] then
        local terrain = workspace:FindFirstChildOfClass("Terrain")
        if not terrain then
            repeat task.wait() until workspace:FindFirstChildOfClass("Terrain")
            terrain = workspace:FindFirstChildOfClass("Terrain")
        end
        terrain.WaterWaveSize = 0
        terrain.WaterWaveSpeed = 0
        terrain.WaterReflectance = 0
        terrain.WaterTransparency = 0
        if sethiddenproperty then
            sethiddenproperty(terrain, "Decoration", false)
        else
            StarterGui:SetCore("SendNotification", {
                Title = "discord.gg/rips",
                Text = "Seu exploit não suporta sethiddenproperty, por favor use um exploit diferente.",
                Duration = 5,
                Button1 = "Okay"
            })
            warn("Seu exploit não suporta sethiddenproperty, por favor use um exploit diferente.")
        end
        if _G.SendNotifications then
            StarterGui:SetCore("SendNotification", {
                Title = "discord.gg/rips",
                Text = "Gráficos de Água Baixos Ativados",
                Duration = 5,
                Button1 = "Okay"
            })
        end
        if _G.ConsoleLogs then
            warn("Gráficos de Água Baixos Ativados")
        end
    end
end)

-- Sem Sombras
coroutine.wrap(pcall)(function()
    if _G.Settings["No Shadows"] then
        Lighting.GlobalShadows = false
        Lighting.FogEnd = 9e9
        Lighting.ShadowSoftness = 0
        if sethiddenproperty then
            sethiddenproperty(Lighting, "Technology", 2)
        else
            StarterGui:SetCore("SendNotification", {
                Title = "discord.gg/rips",
                Text = "Seu exploit não suporta sethiddenproperty, por favor use um exploit diferente.",
                Duration = 5,
                Button1 = "Okay"
            })
            warn("Seu exploit não suporta sethiddenproperty, por favor use um exploit diferente.")
        end
        if _G.SendNotifications then
            StarterGui:SetCore("SendNotification", {
                Title = "discord.gg/rips",
                Text = "Sombras Desligadas",
                Duration = 5,
                Button1 = "Okay"
            })
        end
        if _G.ConsoleLogs then
            warn("Sombras Desligadas")
        end
    end
end)

-- Melhorar FPS
task.spawn(function()
    while task.wait(_G.WaitPerAmount) do
        for _, instance in pairs(workspace:GetDescendants()) do
            CheckIfBad(instance)
        end
    end
end)

for _, instance in pairs(workspace:GetDescendants()) do
    CheckIfBad(instance)
end
